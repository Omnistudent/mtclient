mkdir mtclient
cd mtclient
git init
touch omnistudent_notes.txt
git add omnistudent_notes.txt 
git commit -m "first commit, adding omnistudent_notes.txt"
git remote add origin https://github.com/Omnistudent/mtclient.git
git push origin master

add these changes:
git add omnistudent_notes.txt
git commit -m "second commit, changing omnistudent_notes.txt"
git push origin master

download 
minetest-master.zip
minetest_game-master.zip
to mtclient

unzip minetest-master.zip
mv minetest_game-master.zip minetest-master/games
cd minetest-master/games
unzip minetest_game-master.zip
mv minetest_game-master minetest_game
rm minetest_game-master.zip
cd ..
cd ..
rm minetest-master.zip
// disable line checking, see http://stackoverflow.com/questions/1967370/git-replacing-lf-with-crlf
git config core.autocrlf false

git add .
git add omnistudent_notes.txt 
git commit -m "FIRST REAL COMMIT, containing zipped source and game files"
git push origin master
// moved all files out of minetest-master and up a directory, deleted minetest-master
git add .
git commit -m "Second REAL commit, moved minetest-master files up one dir"

git push origin master

tried making /Users/security/mtc and doing 
git clone https://github.com/Omnistudent/mtclient mtclient
to it
then 
cmake -v -G Xcode .

which failed at
CMake Error at CMakeLists.txt:171 (install):
  install FILES given no DESTINATION!

and  

CMake Error at cmake/Modules/FindOpenGLES2.cmake:44 (create_search_paths):
  Unknown CMake command "create_search_paths".
Call Stack (most recent call first):
  src/CMakeLists.txt:173 (find_package)


// From earlier notes, this is what I need to do:

in src/cmakelists.txt

some changes early in set directories, make to look like van44


	if(APPLE)
			FIND_LIBRARY(CARBON_LIB Carbon)
			FIND_LIBRARY(COCOA_LIB Cocoa)
			FIND_LIBRARY(IOKIT_LIB IOKit)
			mark_as_advanced(
				CARBON_LIB
				COCOA_LIB
				IOKIT_LIB
			)
			SET(CLIENT_PLATFORM_LIBS ${CLIENT_PLATFORM_LIBS} ${CARBON_LIB} ${COCOA_LIB} ${IOKIT_LIB})
		endif(APPLE)


to

		if(APPLE)
			FIND_LIBRARY(CARBON_LIB Carbon)
			FIND_LIBRARY(COCOA_LIB Cocoa)
			FIND_LIBRARY(IOKIT_LIB IOKit)
			FIND_LIBRARY(COREFOUNDATION_LIB CoreFoundation )
			mark_as_advanced(
				CARBON_LIB
				COCOA_LIB
				IOKIT_LIB
				COREFOUNDATION_LIB
			)
			SET(CLIENT_PLATFORM_LIBS ${CLIENT_PLATFORM_LIBS} ${CARBON_LIB} ${COCOA_LIB} ${IOKIT_LIB} ${COREFOUNDATION_LIB})
			SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -framework Cocoa")
	endif(APPLE)

comment out

find_package(OpenGLES2)

change

set(PLATFORM_LIBS -lpthread -lrt ${CMAKE_DL_LIBS})

to

set(PLATFORM_LIBS -lpthread ${CMAKE_DL_LIBS})

in cmakelists.txt

comment out 

install(FILES "misc/minetest.desktop" DESTINATION "${XDG_APPS_DIR}")

in porting.h

after 
#else // Posix
	#include <sys/time.h>
	#include <time.h>

insert

#include <mach/mach_time.h>
#include <mach/mach.h> // This one makes policy thread work
#include <mach/mach_init.h>
#include <mach/thread_policy.h>
#define CLOCK_REALTIME 0
#define CLOCK_MONOTONIC 0

change get getTimeNs()

	inline u32 getTimeNs()
	{
	//	struct timespec ts;
		//clock_gettime(CLOCK_REALTIME, &ts);
                struct timeval tv;
                gettimeofday(&tv, NULL);
              // tv_sec = tv.tv_sec; 
              // tv_nsec = tv.tv_usec * 1000;
		return tv.tv_sec * 1000000000 + tv.tv_usec*1000;
	}


set xcode configuration to release

copied mac files from osxminecraft/misc/mac to same dir


Build now works with package and release selections in xcode


Found in mrscotty cmakelists.txt


	if(APPLE)
		# TODO: install Irrlicht.framework into app bundle!
		# it should be in Contents/Resources/Frameworks/Irrlicht.framework
		
		# Compile .xib files
		# should be in Contents/Resources/MainMenu.nib at the end
		set (MinetestMac_XIBS
			MainMenu
		)
		# Make sure the 'Resources' Directory is correctly created before we build
		add_custom_command (TARGET ${PROJECT_NAME} PRE_BUILD
		    COMMAND mkdir -p ${EXECUTABLE_OUTPUT_PATH}/\${CONFIGURATION}/Contents/Resources)
		    find_program(IBTOOL ibtool HINTS "/usr/bin" "${OSX_DEVELOPER_ROOT}/usr/bin")
		    if (${IBTOOL} STREQUAL "IBTOOL-NOTFOUND")
		message(SEND_ERROR "ibtool can not be found and is needed to compile the .xib files. It should have been installed with 
    		the Apple developer tools. The default system paths were searched in addition to ${OSX_DEVELOPER_ROOT}/usr/bin")													endif()
		# Compile the .xib files using the 'ibtool' program with the destination being the app package
		foreach(xib ${MinetestMac_XIBS})
			add_custom_command (TARGET ${PROJECT_NAME} POST_BUILD 
			COMMAND ${IBTOOL} --errors --warnings --notices --output-format human-readable-text 
		    	--compile ${EXECUTABLE_OUTPUT_PATH}/\${CONFIGURATION}/Contents/Resources/${xib}.nib 
		    ${CMAKE_SOURCE_DIR}/misc/mac/${xib}.xib
		COMMENT "Compiling ${CMAKE_SOURCE_DIR}/${xib}.xib")
		endforeach()

	endif()

for gitignore
minetest-0.4.8-dev-osx.dmg
.DS_Store
*.pbxuser
*.mode1v3
minetest-mac.xcodeproj/xcuserdata/*
minetest-mac.xcodeproj/project.xcworkspace/xcuserdata/*
build/


For clienteer
clientobject::pname and localplayer::getblocktype were removed in .4.8
so I had to put them back in contentCAO localplayer and clientobject

to localplayer
std::string LocalPlayer::getBlocktype(v3f posit,Map &map){

	INodeDefManager *nodemgr = m_gamedef->ndef();
	v3s16 front_node = floatToInt(posit - v3f(0,0,0), BS);
	std::string front_node_type = nodemgr->get(map.getNodeNoEx(front_node)).name;
        return front_node_type;
}

