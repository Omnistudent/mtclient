mkdir mtclient
cd mtclient
git init
touch omnistudent_notes.txt
git add omnistudent_notes.txt 
git commit -m "first commit, adding omnistudent_notes.txt"
git remote add origin https://github.com/Omnistudent/mtclient.git
git push origin master

add these changes:
git add omnistudent_notes.txt
git commit -m "second commit, changing omnistudent_notes.txt"
git push origin master

download 
minetest-master.zip
minetest_game-master.zip
to mtclient

unzip minetest-master.zip
mv minetest_game-master.zip minetest-master/games
cd minetest-master/games
unzip minetest_game-master.zip
mv minetest_game-master minetest_game
rm minetest_game-master.zip
cd ..
cd ..
rm minetest-master.zip
// disable line checking, see http://stackoverflow.com/questions/1967370/git-replacing-lf-with-crlf
git config core.autocrlf false

git add .
git add omnistudent_notes.txt 
git commit -m "FIRST REAL COMMIT, containing zipped source and game files"
git push origin master
// moved all files out of minetest-master and up a directory, deleted minetest-master
git add .
git commit -m "Second REAL commit, moved minetest-master files up one dir"

git push origin master

tried making /Users/security/mtc and doing 
git clone https://github.com/Omnistudent/mtclient mtclient
to it
then 
cmake -v -G Xcode .

which failed at
CMake Error at CMakeLists.txt:171 (install):
  install FILES given no DESTINATION!

and  

CMake Error at cmake/Modules/FindOpenGLES2.cmake:44 (create_search_paths):
  Unknown CMake command "create_search_paths".
Call Stack (most recent call first):
  src/CMakeLists.txt:173 (find_package)


// From earlier notes, this is what I need to do:

in src/cmakelists.txt

some changes early in set directories, make to look like van44


	if(APPLE)
			FIND_LIBRARY(CARBON_LIB Carbon)
			FIND_LIBRARY(COCOA_LIB Cocoa)
			FIND_LIBRARY(IOKIT_LIB IOKit)
			mark_as_advanced(
				CARBON_LIB
				COCOA_LIB
				IOKIT_LIB
			)
			SET(CLIENT_PLATFORM_LIBS ${CLIENT_PLATFORM_LIBS} ${CARBON_LIB} ${COCOA_LIB} ${IOKIT_LIB})
		endif(APPLE)


to

		if(APPLE)
			FIND_LIBRARY(CARBON_LIB Carbon)
			FIND_LIBRARY(COCOA_LIB Cocoa)
			FIND_LIBRARY(IOKIT_LIB IOKit)
			FIND_LIBRARY(COREFOUNDATION_LIB CoreFoundation )
			mark_as_advanced(
				CARBON_LIB
				COCOA_LIB
				IOKIT_LIB
				COREFOUNDATION_LIB
			)
			SET(CLIENT_PLATFORM_LIBS ${CLIENT_PLATFORM_LIBS} ${CARBON_LIB} ${COCOA_LIB} ${IOKIT_LIB} ${COREFOUNDATION_LIB})
			SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -framework Cocoa")
	endif(APPLE)

comment out

find_package(OpenGLES2)

change

set(PLATFORM_LIBS -lpthread -lrt ${CMAKE_DL_LIBS})

to

set(PLATFORM_LIBS -lpthread ${CMAKE_DL_LIBS})

in cmakelists.txt

comment out 

install(FILES "misc/minetest.desktop" DESTINATION "${XDG_APPS_DIR}")

in porting.h

after 
#else // Posix
	#include <sys/time.h>
	#include <time.h>

insert

#include <mach/mach_time.h>
#include <mach/mach.h> // This one makes policy thread work
#include <mach/mach_init.h>
#include <mach/thread_policy.h>
#define CLOCK_REALTIME 0
#define CLOCK_MONOTONIC 0

change get getTimeNs()

	inline u32 getTimeNs()
	{
		struct timespec ts;
		//clock_gettime(CLOCK_REALTIME, &ts);
                struct timeval tv;
                gettimeofday(&tv, NULL);
              // tv_sec = tv.tv_sec; 
              // tv_nsec = tv.tv_usec * 1000;
		return tv.tv_sec * 1000000000 + tv.tv_usec*1000;
	}


set xcode configuration to release

